(function() {
    'use strict';

    // --- КОНФІГУРАЦІЯ ---
    // Вставте ваші API ключі сюди
    var OMDB_API_KEY = 'YOUR_OMDB_API_KEY'; // <--- ВАШ OMDB КЛЮЧ ТУТ
    var MDBLIST_API_KEY = '12c9249c'; // <--- ВАШ MDBLIST КЛЮЧ ТУТ

    // Стиль іконок: 'color' (кольорові) або 'bw' (чорно-білі)
    var ICON_STYLE = 'color'; // 'color' або 'bw'

    // --- Інші налаштування ---
    var CACHE_TIME = 3 * 24 * 60 * 60 * 1000; // 3 дні
    var CACHE_NAME = 'maxsm_rating_cache';

    // --- Посилання на іконки з GitHub ---
    var icon_url_base = 'https://raw.githubusercontent.com/ko31k/LMPStyle/main/wwwroot/';
    var avg_rating_icon_url = icon_url_base + 'star.png';
    var awards_icon_url = icon_url_base + 'awards.png';
    var rotten_bad_icon_url = icon_url_base + 'RottenBad.png';
    var popcorn_icon_url = icon_url_base + 'popcorn.png';

    // --- SVG Іконки (з Enchanser та оригінального omdb.js) ---
    var emmy_svg = '<svg xmlns="http://www.w3.org/2000/svg" width="321" height="563.4" viewBox="0 0 321 563.4" style="height:100%; width:auto; vertical-align:middle;"><path fill="currentColor" d="m 74.000736,558.45002 c 1.419168,-2.3925 5.869572,-9.89926 9.889782,-16.68169 L 91.2,529.43665 l 0,-18.11832 0,-18.11831 -1.5,0 c -1.314288,0 -1.5,-0.26 -1.5,-2.1 0,-1.82704 0.19056,-2.1 1.466076,-2.1 1.000278,0 1.810464,-0.58445 2.55,-1.83952 3.29883,-5.59841 17.748674,-11.01359 38.883924,-14.57201 15.07121,-2.53745 37.2238,-4.57025 49.93857,-4.58254 5.8672,-0.005 6.15295,-0.0656 6.464,-1.35593 0.179,-0.7425 1.38764,-6.21 2.68589,-12.15 l 2.36044,-10.8 -46.25496,-91.20001 C 127.98142,314.71219 106.27409,279.9457 92.962182,240.13737 88.114902,225.64192 85.404036,218.40266 84.357492,217.15891 82.493382,214.94354 81,210.15143 81,206.38504 c 0,-5.79136 3.886722,-13.68528 8.810394,-17.89391 l 2.666022,-2.27885 -8.333772,-26.65613 -8.333772,-26.65614 -10.754436,-0.37312 C 53.657564,132.13147 49.166702,131.30278 41.468017,128.17453 22.562277,120.49244 8.0414946,103.83674 2.5403311,83.523501 1.1083157,78.235737 0.9617808,76.678893 0.9474399,66.600014 0.93373098,56.965242 1.1077609,54.853206 2.2658231,50.600046 2.9996204,47.905064 3.6,45.051569 3.6,44.258946 3.6,41.308294 5.4985663,36.582977 7.807899,33.785964 9.1184184,32.198691 11.635303,29.010013 13.400976,26.700013 20.094714,17.94271 28.752256,10.929783 38.626436,6.2664654 48.028435,1.8261454 60.505212,-0.52607559 70.79076,0.20258241 76.76664,0.62593341 86.32782,3.2953864 92.701692,6.3200484 102.87171,11.14614 113.28506,20.061692 118.8,28.664521 c 1.78694,2.787483 3.5116,4.67981 5.1,5.595822 3.51801,2.028802 7.6379,6.4128 9.24688,9.839671 1.75952,3.747478 2.23256,9.138201 1.21206,13.812412 -0.43079,1.973174 -0.71217,4.93847 -0.62528,6.58955 0.12527,2.380278 -0.21942,3.719412 -1.66441,6.466381 -1.00231,1.905438 -2.12118,5.14455 -2.48637,7.198044 -1.56897,8.822442 -6.36005,20.95421 -10.33833,26.178259 -7.18039,9.44201 -17.57346,18.27858 -26.09455,22.20792 -1.7325,0.7989 -3.15,1.70018 -3.15,2.00283 0,1.30926 6.725634,21.75143 7.266342,22.08561 0.328836,0.20323 3.025728,4.52965 5.993098,9.61425 2.96737,5.08461 5.21821,8.50047 5.00185,7.5908 -1.03039,-4.3324 2.61944,-9.94923 8.35301,-12.85465 3.57477,-1.81147 9.37776,-2.48312 12.51324,-1.44832 1.87057,0.61734 2.45623,0.51503 5.3368,-0.93229 3.76508,-1.89173 10.6449,-2.57282 14.75838,-1.46106 2.8436,0.76855 5.8258,3.0433 7.41437,5.6555 1.14042,1.87525 9.0202,7.20659 9.62248,6.5104 0.19776,-0.2286 3.81209,-9.32563 8.03185,-20.21563 4.21976,-10.89001 7.78403,-19.99869 7.92061,-20.24153 0.13657,-0.24284 2.42268,0.65172 5.08023,1.98791 2.65755,1.33619 4.89397,2.34488 4.96982,2.24153 0.0759,-0.10336 7.19655,-12.75012 15.82378,-28.103909 8.62723,-15.353798 16.10334,-28.448798 16.61356,-29.100003 0.87677,-1.119006 0.91035,-1.068726 0.61169,0.915997 -0.17381,1.155 -2.21522,17.085 -4.53647,35.399995 -2.32125,18.315 -4.34836,33.8998 -4.50469,34.63289 -0.27243,1.27758 -0.50632,1.1982 -5.6375,-1.91321 l -5.35327,-3.24608 -0.32876,1.6132 c -0.18082,0.88726 -1.68957,11.04664 -3.35278,22.57639 -1.6632,11.52975 -3.16447,21.10365 -3.33615,21.27532 -0.17167,0.17168 -3.40574,-1.22777 -7.18681,-3.10989 -3.78107,-1.88211 -6.87643,-3.22101 -6.87856,-2.97532 -0.013,1.48955 -6.65991,47.21048 -6.89817,47.44875 -0.3262,0.32619 -2.27277,-0.69903 -14.39795,-7.58319 l -8.4,-4.76916 -7.35462,21.97515 c -4.04504,12.08633 -7.5017,22.43494 -7.68146,22.9969 -0.23954,0.7488 0.35068,1.36741 2.20939,2.31565 5.18677,2.64609 11.9275,10.8995 15.86876,19.42983 3.80532,8.23611 5.71185,17.96715 4.53225,23.13277 l -0.61656,2.7 14.51728,28.65811 c 10.78048,21.28139 14.73986,28.57269 15.38193,28.3263 0.84644,-0.3248 57.65033,20.07553 57.6355,20.699 -0.004,0.17412 -8.91414,10.03482 -19.8,21.91264 L 209.4,423.89211 l 0,21.96294 0,21.96295 8.85,0.40375 c 40.55234,1.85009 72.41453,8.97829 80.33073,17.97156 1.76176,2.00147 2.92223,2.80671 4.04491,2.80671 1.39927,0 1.57436,0.23355 1.57436,2.1 0,1.93333 -0.14286,2.1 -1.8,2.1 l -1.8,0 0,17.63244 0,17.63245 9.06443,15.21756 c 4.98543,8.36965 9.59746,16.09505 10.24893,17.16755 l 1.18451,1.95 -124.83872,0 -124.83872,0 z M 73.597602,127.00241 c 0.164172,-0.16417 -0.951516,-4.24865 -2.479314,-9.07661 -3.48879,-11.02485 -2.959782,-10.6958 -15.497704,-9.63975 -6.652075,0.5603 -6.449345,0.20293 -3.241462,5.71396 2.950134,5.06823 9.088502,10.96353 13.020878,12.50526 2.98059,1.16858 7.266258,1.42848 8.197602,0.49714 z M 53.618794,123.41898 C 51.683457,121.3394 49.155,117.96324 48,115.9164 c -4.492639,-7.96169 -3.856145,-7.31639 -7.216476,-7.31639 -7.015931,0 -17.811365,-3.27057 -22.927374,-6.94606 l -2.971964,-2.135143 1.107907,1.923713 c 1.709693,2.96864 9.668443,11.21041 14.007907,14.50604 5.129935,3.91116 14.729887,8.53593 20.7,9.99304 2.64,0.64434 5.168457,1.19108 5.618794,1.21497 0.450336,0.0239 -0.764664,-1.65802 -2.7,-3.73759 z m 43.898534,-5.12175 c 2.960472,-1.92654 5.897612,-4.08719 6.526972,-4.80146 l 1.1443,-1.29865 -2.9443,0.39864 c -4.94824,0.66994 -5.425882,0.96919 -8.227012,5.15425 -1.490904,2.2275 -2.52441,4.05 -2.29668,4.05 0.227724,0 2.836248,-1.57625 5.79672,-3.50278 z m -8.07456,-2.04722 1.850298,-2.55 -1.696536,-0.37901 c -0.93309,-0.20845 -2.333298,-0.41095 -3.111576,-0.45 -1.213794,-0.0609 -1.362444,0.13858 -1.045212,1.40255 0.561312,2.23644 1.493034,4.52646 1.841646,4.52646 0.171096,0 1.14372,-1.1475 2.16138,-2.55 z m 6.337452,-12.75 c 1.034124,-2.64 2.053632,-5.549916 2.265576,-6.466494 l 0.38535,-1.666494 -3.465576,1.732644 c -1.906062,0.952956 -5.670276,2.605477 -8.364918,3.672264 l -4.899348,1.93962 0.636402,1.89423 c 0.350022,1.04183 0.888258,2.21724 1.196082,2.61202 0.59037,0.75715 3.954072,1.23887 7.966212,1.14085 l 2.4,-0.0586 1.88022,-4.8 z m 12.89798,2.31662 c 4.16453,-1.86893 7.26138,-5.06592 9.37106,-9.674066 1.30961,-2.86056 1.46545,-3.85032 1.16691,-7.411297 -0.48858,-5.827734 -0.87483,-6.331002 -3.45027,-4.495602 -1.13624,0.809748 -4.16882,2.910492 -6.73905,4.668312 -3.19353,2.184103 -4.77647,3.670975 -4.99945,4.696039 -0.30776,1.414752 -3.55796,11.799704 -4.290162,13.707794 -0.508026,1.32389 4.546642,0.48087 8.940962,-1.49118 z M 42,103.39258 C 42,103.1685 41.422081,101.211 40.715736,99.042587 39.465596,95.204776 39.29675,95.005234 34.361241,91.532956 31.059647,89.210181 27.20339,87.178161 23.306333,85.707681 20.01476,84.465663 16.394282,82.876317 15.260827,82.175805 L 13.2,80.902143 l 0,2.973498 c 0,9.575389 7.306675,16.390069 20.4,19.026369 4.348796,0.87561 8.4,1.11221 8.4,0.49057 z m 12.55,0.17777 c -0.1375,-0.12632 -2.213885,-1.21293 -4.614189,-2.41469 l -4.36419,-2.185019 0.91419,2.187959 c 0.502804,1.20338 0.914189,2.28999 0.914189,2.41469 0,0.1247 1.665,0.22672 3.7,0.22672 2.035,0 3.5875,-0.10335 3.45,-0.22966 z m 11.133638,-2.82188 C 65.465166,100.06012 64.623852,98.0497 63.81405,96.280864 62.169456,92.688586 62.63472,92.86477 52.8,92.110228 50.325,91.92034 47.2875,91.603354 46.05,91.405816 c -1.2375,-0.197544 -2.249929,-0.12216 -2.249843,0.167514 2.07e-4,0.690012 9.944647,6.26136 15.299843,8.5717 5.157894,2.22521 7.156512,2.40841 6.583638,0.60344 z m 26.266704,-7.87626 c 2.887686,-1.35933 5.164188,-2.557662 5.058894,-2.662962 -0.1053,-0.105294 -2.352162,0.188448 -4.993038,0.652758 -2.64087,0.46431 -6.746778,1.035876 -9.124236,1.270146 -4.714452,0.46455 -4.553826,0.235608 -3.027654,4.315338 l 0.504072,1.34748 3.16581,-1.225626 C 85.275384,95.89525 89.062656,94.23154 91.950342,92.87221 Z M 59.4,86.712279 c 0,-0.158256 -1.218128,-3.035124 -2.70695,-6.393048 -1.488823,-3.357924 -2.601032,-6.211236 -2.471576,-6.340692 0.371589,-0.371586 19.254034,-5.446765 19.491562,-5.238895 0.117168,0.102546 0.580134,3.342619 1.028802,7.200169 0.448674,3.85755 1.12674,7.955976 1.50681,9.10761 l 0.691044,2.09388 4.280154,-0.392502 c 4.532112,-0.415602 19.130614,-2.714556 19.495864,-3.070188 0.5477,-0.533262 1.23411,-9.728808 1.25794,-16.852183 L 102,58.952846 99.45,56.615549 C 96.087768,53.53377 90.737862,49.473434 85.256142,45.84305 L 80.812284,42.900014 66.956142,42.918984 53.1,42.937954 48.173979,45.463622 c -2.709312,1.389117 -5.253173,3.13558 -5.653024,3.881028 -1.651033,3.07804 -1.234923,34.207515 0.479682,35.885265 C 43.85755,86.068407 59.4,87.473313 59.4,86.712279 Z m -51.7458018,-9.7599 c -0.6924114,-0.741198 -1.358835,-1.24773 -1.4809416,-1.125618 -0.122106,0.122106 0.2466648,2.213538 0.8194914,4.64763 l 1.0415034,4.425624 0.4394382,-3.3 c 0.383463,-2.879646 0.2790768,-3.47166 -0.8194914,-4.647636 z M 36.967956,81.150015 C 36.220288,75.757533 35.915551,62.0921 36.433634,57.189177 l 0.51892,-4.910837 -1.670633,0.986868 C 30.06717,56.345637 18.6,67.764806 18.6,69.877298 c 0,0.475296 2.707357,3.571537 6.01635,6.880531 5.844072,5.844072 7.747457,7.05321 11.315204,7.188072 1.368041,0.05172 1.414023,-0.07233 1.036402,-2.795886 z m 86.952124,-1.229922 c -0.67055,-0.670548 -1.31987,0.654192 -1.03695,2.1156 l 0.32218,1.664322 0.47751,-1.769838 c 0.26262,-0.973416 0.36939,-1.877952 0.23726,-2.010084 z m -8.80082,-1.582188 c 0.86586,-0.86586 0.81879,-1.18863 -0.53493,-3.668358 -0.81639,-1.495428 -2.74337,-4.346227 -4.2822,-6.335107 l -2.79787,-3.616146 -0.32949,3.79086 c -0.18122,2.084977 -0.48081,6.016129 -0.66575,8.735899 l -0.33627,4.945038 3.99855,-1.451394 c 2.19921,-0.79827 4.42579,-1.87863 4.94796,-2.400792 z M 17.606163,76.538409 C 16.085444,74.632551 15,74.260137 15,75.644247 c 0,0.46344 3.424598,2.945208 4.075579,2.953524 0.09657,0.0012 -0.564669,-0.925482 -1.469416,-2.059362 z M 123.30724,69.590156 c 1.83247,-2.49633 2.09174,-3.288666 2.08457,-6.37053 -0.005,-1.935786 -0.16555,-4.106255 -0.35786,-4.823263 -0.65923,-2.45778 -8.17011,-6.985684 -16.32784,-9.843165 l -3.1939,-1.118753 0.3053,1.632785 c 0.16791,0.898031 0.48121,2.982784 0.69624,4.632784 0.31362,2.40662 0.94811,3.652718 3.20784,6.3 4.11241,4.817736 6.28209,7.73649 8.1528,10.967593 1.896,3.274764 2.04566,3.23682 5.43285,-1.377451 z M 11.857292,71.173617 c 0.361173,-0.792691 0.421663,-1.659019 0.136154,-1.950001 -0.282566,-0.287982 -1.463912,-2.106504 -2.6252134,-4.041162 -2.0476194,-3.41121 -2.1237648,-3.468522 -2.5185318,-1.895646 -0.5000616,1.992402 0.5272896,5.613606 2.1935922,7.731967 1.532362,1.948086 1.985581,1.973022 2.813999,0.154842 z M 29.949688,51.126512 c 2.512717,-1.884574 5.239467,-3.888428 6.059444,-4.453008 L 37.5,45.646994 35.4,46.006906 c -6.898507,1.18231 -18.824066,6.14374 -23.371664,9.723389 -1.643183,1.293435 -1.523811,1.844676 1.54236,7.122383 l 1.483012,2.552664 5.163702,-5.426165 c 2.840037,-2.984392 7.219562,-6.968092 9.732278,-8.852665 z m 99.702432,-1.626498 c -0.36914,-1.65 -1.23536,-3.81 -1.92493,-4.8 -0.7092,-1.018188 -1.07085,-1.278792 -0.83263,-0.6 0.23162,0.66 1.0026,3.495 1.71329,6.3 1.378,5.438863 2.28712,4.655345 1.04427,-0.9 z M 17.153952,46.89582 c 4.957223,-2.46424 14.655736,-5.795343 18.804848,-6.458813 1.3302,-0.212707 2.647378,-0.690548 2.927062,-1.061867 0.698473,-0.92732 3.248783,-10.040481 2.905803,-10.383462 -0.152176,-0.152176 -3.475054,-0.283378 -7.384174,-0.29156 -7.651373,-0.01601 -11.333457,0.64392 -16.213939,2.906006 -3.460401,1.603884 -4.997996,3.72959 -8.048327,11.126721 -1.7389676,4.217039 -2.0712716,6.119361 -1.3824944,7.914285 0.320034,0.833996 0.5559162,0.8077 2.0039524,-0.223392 0.902671,-0.642759 3.776943,-2.230322 6.387269,-3.527918 z m 83.632688,2.23114 c -0.24873,-1.360181 -0.814448,-2.69692 -1.257164,-2.970531 -0.968118,-0.598331 -5.305668,-1.380226 -5.66475,-1.021139 -0.178554,0.178549 6.311604,5.888954 7.304714,6.427098 0.0382,0.02069 -0.13407,-1.075249 -0.3828,-2.435428 z m 22.00675,-1.109994 c -0.19613,-0.980676 -1.33947,-3.933197 -2.54074,-6.561157 -1.88729,-4.128725 -2.48099,-4.896258 -4.36839,-5.647441 -3.41868,-1.360631 -13.27999,-3.082653 -13.2893,-2.320632 -0.003,0.226752 0.44972,2.187003 1.00555,4.356113 l 1.01058,3.943835 4.84446,1.646893 c 2.66445,0.905791 6.73445,2.675373 9.04445,3.932405 2.31,1.257033 4.30125,2.318705 4.425,2.359273 0.12375,0.04057 0.0645,-0.728613 -0.13161,-1.709289 z M 99,39.708914 c 0,-0.270104 -0.427002,-1.928973 -0.948894,-3.686375 l -0.948894,-3.195276 -5.341998,0.379186 C 85.436436,33.655324 78,34.8184 78,35.358579 c 0,0.81428 3.58269,2.444224 5.492574,2.498845 1.104084,0.03158 4.572426,0.532304 7.707426,1.11273 6.938106,1.284546 7.8,1.366179 7.8,0.73876 z M 57.45,35.969058 c 2.0625,-0.804614 3.75,-1.624252 3.75,-1.821416 0,-0.381459 -9.260642,-3.310091 -12.324685,-3.89762 -1.919126,-0.367992 -2.07168,-0.09369 -4.226313,7.599119 -0.237612,0.848357 0.228758,0.876597 4.392581,0.26599 C 51.603712,37.739406 55.3875,36.773673 57.45,35.969058 Z m 16.399212,-5.081797 c 4.451802,-1.153578 14.972268,-2.661836 18.667536,-2.676256 l 2.816748,-0.01099 -1.269084,-3.053759 c -0.76542,-1.841814 -1.786824,-3.250605 -2.57364,-3.549752 -3.970716,-2.536441 -3.593171,-6.95089 -6.066048,-9.614896 C 81.937596,8.2535874 77.6994,6.1933604 72.429198,5.6643664 68.65143,5.2851744 68.08161,5.3920234 64.513272,7.1487104 59.768832,9.4843914 54.461406,15.06302 51.349325,20.985321 l -2.185355,4.158737 2.568015,0.669534 c 5.766268,1.503384 10.568421,3.030439 13.970715,4.442599 4.324338,1.794865 3.809262,1.754965 8.146512,0.63107 z M 113.4,29.631485 c 0,-0.966017 -6.77573,-8.027747 -10.68902,-11.140196 -4.876984,-3.878925 -7.591438,-5.591517 -6.212422,-3.919522 0.439206,0.532519 0.724572,1.859223 0.634146,2.948232 -0.09544,1.149441 0.576324,3.801644 1.601442,6.322621 1.704014,4.190532 1.839394,4.345133 3.865854,4.414761 1.155,0.03968 3.855,0.409257 6,0.821271 2.145,0.412014 4.1025,0.787871 4.35,0.835238 0.2475,0.04737 0.45,-0.07972 0.45,-0.282405 z M 28.697959,24.029337 C 31.628286,23.707393 36.127153,23.66645 39,23.935587 c 2.805,0.262776 5.122294,0.452272 5.149541,0.421103 0.02725,-0.03117 1.188954,-2.196242 2.58157,-4.81127 2.549783,-4.787939 7.7152,-11.7954176 9.569256,-12.9817926 1.824302,-1.167336 -4.011242,-0.02179 -9.992638,1.961605 -6.400489,2.1223636 -13.264604,6.0307176 -19.38343,11.0367196 -4.259202,3.484585 -6.495989,6.216072 -4.44614,5.429471 0.559768,-0.214803 3.358678,-0.64774 6.2198,-0.962086 z M 93.6,12.364207 c 0,-0.129694 -0.405,-0.39122 -0.9,-0.581169 -0.495,-0.18995 -0.9,-0.08384 -0.9,0.235806 0,0.319643 0.405,0.581169 0.9,0.581169 0.495,0 0.9,-0.106113 0.9,-0.235806 z"/></svg>';
    var rotten_good_svg = '<svg xmlns="http://www.w3.org/2000/svg" height="141.25" viewBox="0 0 138.75 141.25" width="138.75" style="height:100%; width:auto; vertical-align:middle;"><g fill="#f93208"><path d="m20.154 40.829c-28.149 27.622-13.657 61.011-5.734 71.931 35.254 41.954 92.792 25.339 111.89-5.9071 4.7608-8.2027 22.554-53.467-23.976-78.009z"/><path d="m39.613 39.265 4.7778-8.8607 28.406-5.0384 11.119 9.2082z"/></g><g fill="#02902e"><path d="m39.436 8.5696 8.9682-5.2826 6.7569 15.479c3.7925-6.3226 13.79-16.316 24.939-4.6684-4.7281 1.2636-7.5161 3.8553-7.7397 8.4768 15.145-4.1697 31.343 3.2127 33.539 9.0911-10.951-4.314-27.695 10.377-41.771 2.334 0.009 15.045-12.617 16.636-19.902 17.076 2.077-4.996 5.591-9.994 1.474-14.987-7.618 8.171-13.874 10.668-33.17 4.668 4.876-1.679 14.843-11.39 24.448-11.425-6.775-2.467-12.29-2.087-17.814-1.475 2.917-3.961 12.149-15.197 28.625-8.476z"/></g></svg>';
    var oscar_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 38.18 101.76" style="height:100%; width:auto; vertical-align:middle;"><path fill="currentColor" d="m 27.371,-0.693 c -3.927,0.366 -5.229,3.538 -4.963,6.778 0.266,3.239 3.685,6.972 0.135,8.956 -1.577,1.413 -3.154,3.073 -5.207,3.54 -2.679,0.607 -4.287,3.054 -4.607,6.419 1.388,4.824 0.365,9.285 1.773,12.824 1.407,3.539 3.696,3.831 3.986,5.076 0.317,7.637 2.341,17.535 0.856,24.93 1.172,0.184 0.93,0.444 0.894,0.729 -0.036,0.284 -0.48,0.381 -1.088,0.527 0.847,7.684 -0.278,12.136 1.983,18.771 l 0,3.592 -1.07,0 0,1.524 c 0,0 -7.31,-0.005 -8.565,0 0,0 0.68,2.159 -1.523,3.027 0.008,1.1 0,2.719 0,2.719 l -1.569,0 0,2.353 c 13.221703,0 26.837907,0 38.186,0 l 0,-2.352 -1.57,0 c 0,0 -0.007,-1.619 0.001,-2.719 C 42.82,95.133 43.5,92.974 43.5,92.974 c -1.255,-0.005 -8.564,0 -8.564,0 l 0,-1.524 -1.073,0 0,-3.592 c 2.261,-6.635 1.138,-11.087 1.985,-18.771 -0.608,-0.146 -1.054,-0.243 -1.09,-0.527 -0.036,-0.285 -0.278,-0.545 0.894,-0.729 -0.845,-8.058 0.902,-17.493 0.858,-24.93 0.29,-1.245 2.579,-1.537 3.986,-5.076 1.408,-3.539 0.385,-8 1.774,-12.824 -0.32,-3.365 -1.931,-5.812 -4.61,-6.42 -2.053,-0.466 -3.469,-2.6 -5.369,-3.884 -3.118,-2.472 -0.61,-5.364 0.373,-8.578 0,-5.01 -2.154,-6.483 -5.293,-6.811 z"/></svg>';

    // --- Локалізація (Переклади) ---
    Lampa.Lang.add({
        ratimg_omdb_avg: {
            ru: 'ИТОГ',
            en: 'TOTAL',
            uk: 'СЕРЕДНЯ'
        },
        loading_dots: {
            ru: 'Загрузка рейтингов',
            en: 'Loading ratings',
            uk: 'Трішки зачекаємо ...'
        },
        source_popcorn: {
            ru: 'PopcornMeter',
            en: 'PopcornMeter',
            uk: 'PopcornMeter'
        }
    });

    // --- Стилі ---
    function applyStyles() {
        var icon_filter = ICON_STYLE === 'bw' ? 'grayscale(100%)' : 'none';

        var style = `
        <style id="maxsm_omdb_rating_mod">
            .full-start-new__rate-line {
                visibility: hidden;
                flex-wrap: wrap;
                gap: 0.5em;
                position: relative;
            }
            .rate-item {
                display: flex;
                align-items: center;
                background: rgba(255, 255, 255, 0.1);
                border-radius: 1em;
                padding: 0.3em 0.6em;
                margin: 0 !important;
                height: 1.8em;
            }
            .rate-item__icon {
                height: 1.2em;
                width: auto;
                margin-right: 0.4em;
                filter: ${icon_filter};
                display: flex;
                align-items: center;
            }
            .rate-item__value {
                font-weight: bold;
                font-size: 1em;
                line-height: 1;
            }
            .rate--avg.rating--green  { color: #4caf50; }
            .rate--avg.rating--lime   { color: #3399ff; }
            .rate--avg.rating--orange { color: #ff9933; }
            .rate--avg.rating--red    { color: #f44336; }
            .rate--oscars, .rate--emmy, .rate--awards { color: gold; }
            .loading-dots-container {
                position: absolute;
                top: 50%; left: 0; right: 0;
                text-align: center;
                transform: translateY(-50%);
                z-index: 10;
            }
            .loading-dots {
                display: inline-flex; align-items: center; gap: 0.4em;
                color: #fff; font-size: 1em; background: rgba(0,0,0,0.3);
                padding: 0.6em 1em; border-radius: 0.5em;
            }
        </style>`;

        $('#maxsm_omdb_rating_mod').remove();
        $('body').append(style);
    }

    // --- Основна логіка ---

    function parseAwards(awardsText) {
        if (typeof awardsText !== 'string') return null;

        let result = {
            oscars: 0,
            emmy: 0,
            awards: 0
        };

        let oscarMatch = awardsText.match(/Won (\d+) Oscars?/i);
        if (oscarMatch) result.oscars = parseInt(oscarMatch[1], 10);

        let emmyMatch = awardsText.match(/Won (\d+) Primetime Emmys?/i);
        if (emmyMatch) result.emmy = parseInt(emmyMatch[1], 10);

        let otherWinsMatch = awardsText.match(/Another (\d+) wins/i);
        if (otherWinsMatch) {
            result.awards = parseInt(otherWinsMatch[1], 10);
        } else {
            let totalWinsMatch = awardsText.match(/(\d+) wins/i);
            if (totalWinsMatch) {
                result.awards = parseInt(totalWinsMatch[1], 10) - result.emmy;
            }
        }
        
        return result;
    }

    function fetchAndDisplayRatings(card) {
        let render = Lampa.Activity.active().activity.render();
        if (!render) return;

        let rateLine = $('.full-start-new__rate-line', render);
        if (rateLine.length) {
            rateLine.css('visibility', 'hidden').empty();
            rateLine.append('<div class="loading-dots-container"><div class="loading-dots">' + Lampa.Lang.translate("loading_dots") + '</div></div>');
        }

        let imdb_id = card.imdb_id || card.imdb;
        let tmdb_id = card.id;
        let type = card.media_type === 'tv' || card.first_air_date ? 'show' : 'movie';
        
        const omdbPromise = (OMDB_API_KEY && OMDB_API_KEY !== 'YOUR_OMDB_API_KEY' && imdb_id) ? new Promise((resolve) => {
            let url = `https://www.omdbapi.com/?apikey=${OMDB_API_KEY}&i=${imdb_id}`;
            new Lampa.Reguest().silent(url, (data) => resolve(data), () => resolve({}));
        }) : Promise.resolve({});

        const mdbListPromise = (MDBLIST_API_KEY && MDBLIST_API_KEY !== 'YOUR_MDBLIST_API_KEY') ? new Promise((resolve) => {
            let url = `https://api.mdblist.com/tmdb/${type}/${tmdb_id}?apikey=${MDBLIST_API_KEY}`;
            new Lampa.Reguest().silent(url, (data) => resolve(data), () => resolve({}));
        }) : Promise.resolve({});

        Promise.all([omdbPromise, mdbListPromise]).then(([omdbData, mdbListData]) => {
            let finalRatings = {
                imdb: null, tmdb: null, rt: null,
                mc: null, popcorn: null, oscars: 0,
                emmy: 0, awards: 0
            };

            if (mdbListData && mdbListData.ratings) {
                mdbListData.ratings.forEach(r => {
                    if (r.source === 'imdb') finalRatings.imdb = r.value;
                    if (r.source === 'tmdb') finalRatings.tmdb = r.value;
                    if (r.source === 'rotten tomatoes') finalRatings.rt = r.value;
                    if (r.source === 'metacritic') finalRatings.mc = r.value;
                    if (r.source === 'rt audience') finalRatings.popcorn = r.value;
                });
            }
            
            if (!finalRatings.imdb && omdbData.imdbRating && omdbData.imdbRating !== 'N/A') {
                finalRatings.imdb = parseFloat(omdbData.imdbRating);
            }
            if (omdbData.Ratings) {
                 omdbData.Ratings.forEach(r => {
                    if (r.Source === 'Rotten Tomatoes' && !finalRatings.rt) {
                         finalRatings.rt = parseInt(r.Value.replace('%', ''));
                    }
                    if (r.Source === 'Metacritic' && !finalRatings.mc) {
                         finalRatings.mc = parseInt(r.Value.split('/')[0]);
                    }
                 });
            }

            if (omdbData.Awards) {
                let awards = parseAwards(omdbData.Awards);
                finalRatings.oscars = awards.oscars;
                finalRatings.emmy = awards.emmy;
                finalRatings.awards = awards.awards;
            }

            if (!finalRatings.tmdb && card.vote_average) {
                finalRatings.tmdb = parseFloat(card.vote_average);
            }
            
            renderRatings(finalRatings, render);
        });
    }
    
    function renderRatings(ratings, render) {
        let rateLine = $('.full-start-new__rate-line', render);
        rateLine.empty();
    
        let totalWeight = 0, weightedSum = 0, ratingsCount = 0;
        const WEIGHTS = { imdb: 0.4, tmdb: 0.4, mc: 0.1, rt: 0.1 };
    
        if (ratings.imdb) { weightedSum += ratings.imdb * WEIGHTS.imdb; totalWeight += WEIGHTS.imdb; ratingsCount++; }
        if (ratings.tmdb) { weightedSum += ratings.tmdb * WEIGHTS.tmdb; totalWeight += WEIGHTS.tmdb; ratingsCount++; }
        if (ratings.mc) { weightedSum += (ratings.mc / 10) * WEIGHTS.mc; totalWeight += WEIGHTS.mc; ratingsCount++; }
        if (ratings.rt) { weightedSum += (ratings.rt / 10) * WEIGHTS.rt; totalWeight += WEIGHTS.rt; ratingsCount++; }
    
        if (ratingsCount > 1 && totalWeight > 0) {
            let average = (weightedSum / totalWeight);
            let colorClass = average >= 8.0 ? 'rating--green' : average >= 6.0 ? 'rating--lime' : average >= 5.5 ? 'rating--orange' : 'rating--red';
            rateLine.append(`
                <div class="rate-item rate--avg ${colorClass}">
                    <img class="rate-item__icon" src="${avg_rating_icon_url}">
                    <div class="rate-item__value">${average.toFixed(1)}</div>
                </div>`);
        }
        
        if (ratings.oscars > 0) {
            rateLine.append(`
                <div class="rate-item rate--oscars">
                    <div class="rate-item__icon">${oscar_svg}</div>
                    <div class="rate-item__value">${ratings.oscars}</div>
                </div>`);
        }
        if (ratings.emmy > 0) {
            rateLine.append(`
                <div class="rate-item rate--emmy">
                    <div class="rate-item__icon">${emmy_svg}</div>
                    <div class="rate-item__value">${ratings.emmy}</div>
                </div>`);
        }
        if (ratings.awards > 0) {
             rateLine.append(`
                <div class="rate-item rate--awards">
                    <img class="rate-item__icon" src="${awards_icon_url}">
                    <div class="rate-item__value">${ratings.awards}</div>
                </div>`);
        }
    
        if (ratings.tmdb) {
            rateLine.append(`
                <div class="rate-item rate--tmdb">
                    <div class="rate-item__icon"><img src="https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_1-5bdc75aaebeb75dc7ae79426ddd9be3b2be1e342510f8202b56833f3bf904c32.svg" style="height:100%;"></div>
                    <div class="rate-item__value">${ratings.tmdb.toFixed(1)}</div>
                </div>`);
        }
        if (ratings.imdb) {
            rateLine.append(`
                <div class="rate-item rate--imdb">
                    <div class="rate-item__icon"><img src="https://upload.wikimedia.org/wikipedia/commons/6/69/IMDB_Logo_2016.svg" style="height:100%;"></div>
                    <div class="rate-item__value">${ratings.imdb.toFixed(1)}</div>
                </div>`);
        }
        if (ratings.mc) {
            rateLine.append(`
                <div class="rate-item rate--mc">
                    <div class="rate-item__icon"><img src="https://upload.wikimedia.org/wikipedia/commons/2/20/Metacritic.svg" style="height:100%;"></div>
                    <div class="rate-item__value">${ratings.mc}</div>
                </div>`);
        }
        if (ratings.rt !== null) {
            let rt_icon_html = ratings.rt >= 60 
                ? `<div class="rate-item__icon">${rotten_good_svg}</div>`
                : `<img class="rate-item__icon" src="${rotten_bad_icon_url}">`;
            rateLine.append(`
                <div class="rate-item rate--rt">
                    ${rt_icon_html}
                    <div class="rate-item__value">${ratings.rt}%</div>
                </div>`);
        }
        if (ratings.popcorn !== null) {
             rateLine.append(`
                <div class="rate-item rate--popcorn">
                    <img class="rate-item__icon" src="${popcorn_icon_url}">
                    <div class="rate-item__value">${ratings.popcorn}%</div>
                </div>`);
        }
    
        rateLine.css('visibility', 'visible');
    }

    // --- Ініціалізація плагіна ---
    function startPlugin() {
        if (window.omdb_ratings_mod_plugin) return;
        window.omdb_ratings_mod_plugin = true;
        
        applyStyles();

        Lampa.Listener.follow('full', function(e) {
            if (e.type === 'complite') {
                setTimeout(() => fetchAndDisplayRatings(e.data.movie), 500);
            }
        });
    }

    if (window.appready) {
        startPlugin();
    } else {
        Lampa.Listener.follow('app', (e) => {
            if (e.type === 'ready') startPlugin();
        });
    }

})();
