(function () {
    'use strict';

    /**
     * üîß CONFIG ‚Äî –≥–æ–ª–æ–≤–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –ø–ª–∞–≥—ñ–Ω–∞
     * –¢—É—Ç –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è:
     *  - API –∫–ª—é—á MDBList
     *  - –±–∞–∑–æ–≤–∏–π —à–ª—è—Ö –¥–æ SVG —ñ–∫–æ–Ω–æ–∫
     *  - —Å—Ç–∏–ª—ñ —Ç–∞ –∫–æ–ª—å–æ—Ä–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª —Ä–µ–π—Ç–∏–Ω–≥—ñ–≤
     *  - –ø–æ—Ä—è–¥–æ–∫ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ–π—Ç–∏–Ω–≥—ñ–≤
     */
    var CONFIG = {
        // üëâ –°—é–¥–∏ –≤—Å—Ç–∞–≤ —Å–≤—ñ–π –æ—Å–æ–±–∏—Å—Ç–∏–π API –∫–ª—é—á –∑ https://mdblist.com/
        API_KEY: 'm8po461k1zq14sroj2ez5d7um',

        /**
         * üìÇ ICON_BASE_URL ‚Äî –¥–∏–Ω–∞–º—ñ—á–Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —à–ª—è—Ö—É –¥–æ SVG-—ñ–∫–æ–Ω–æ–∫
         * 1. –Ø–∫—â–æ –ª–æ–∫–∞–ª—å–Ω–∏–π –∑–∞–ø—É—Å–∫ ‚Üí –±–µ—Ä–µ /wwwroot/img/
         * 2. –Ø–∫—â–æ –Ω–∞ GitHub Pages ‚Üí –±–µ—Ä–µ https://ko31k.github.io/LMP/wwwroot/img/
         * 3. –Ø–∫—â–æ —ñ–Ω—à–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ ‚Üí fallback –Ω–∞ GitHub raw (—Ä–µ–∑–µ—Ä–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç)
         */
        ICON_BASE_URL: (function() {
            var base = window.location.origin;
            var path = window.location.pathname;

            // ‚úÖ –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞ localhost)
            if (window.location.hostname === 'localhost' ||
                window.location.hostname === '127.0.0.1') {
                return base + '/wwwroot/img/';
            }

            // ‚úÖ –î–ª—è GitHub Pages (—Ç–≤–æ—î —Å—Ö–æ–≤–∏—â–µ: ko31k.github.io/LMP/)
            if (window.location.hostname === 'ko31k.github.io') {
                return base + '/LMP/wwwroot/img/';
            }

            // üîÅ –†–µ–∑–µ—Ä–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç ‚Äî —è–∫—â–æ –ø–ª–∞–≥—ñ–Ω –∑–∞–ø—É—â–µ–Ω–æ –≤ —ñ–Ω—à–æ–º—É –º—ñ—Å—Ü—ñ
            return 'https://raw.githubusercontent.com/ko31k/LMP/main/wwwroot/img/';
        })(),

        /**
         * üé® ICONS ‚Äî –Ω–∞–±—ñ—Ä —É—Å—ñ—Ö —ñ–∫–æ–Ω–æ–∫ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤–∏—Ö —Å–∏—Å—Ç–µ–º —ñ–∑ –∫–æ–ª—å–æ—Ä–∞–º–∏
         * file: –Ω–∞–∑–≤–∞ SVG —Ñ–∞–π–ª—É
         * bg: –∫–æ–ª—ñ—Ä —Ñ–æ–Ω—É –µ–ª–µ–º–µ–Ω—Ç–∞
         * text: –æ—Å–Ω–æ–≤–Ω–∏–π –∫–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É/–∑–Ω–∞—á–µ–Ω–Ω—è
         */
        ICONS: {
            imdb:         { file: 'imdb.svg',       bg: 'rgba(0,0,0,0.1)', text: '#F5C518' },
            tomatoes:     { file: 'rt.svg',         bg: 'rgba(0,0,0,0.1)', text: '#F93109' },
            tomatoes_bad: { file: 'rt-bad.svg',     bg: 'rgba(0,0,0,0.1)', text: '#00a600' },
            popcorn:      { file: 'pcrn.svg',       bg: 'rgba(0,0,0,0.1)', text: '#FCD24C' },
            tmdb:         { file: 'tmdb.svg',       bg: 'rgba(0,0,0,0.1)', text: '#00b3e5' },
            metacritic:   { file: 'metacritic.svg', bg: 'rgba(0,0,0,0.1)', text: '#FFCC33' }
        },

        /**
         * üìä –ü–æ—Ä—è–¥–æ–∫ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ–π—Ç–∏–Ω–≥—ñ–≤ –Ω–∞ –µ–∫—Ä–∞–Ω—ñ
         * –ó–≤–µ—Ä—Ö—É –≤–Ω–∏–∑ –∞–±–æ –∑–ª—ñ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ
         */
        RATING_ORDER: ['tomatoes', 'popcorn', 'imdb', 'tmdb', 'metacritic']
    };

    /**
     * üåê –õ–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—è –æ–ø–∏—Å—É –ø–ª–∞–≥—ñ–Ω–∞ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –º–æ–≤ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É Lampa
     */
    var LANG = {
        ratings_desc: {
            ru: "–î–æ–±–∞–≤–ª—è–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∏",
            en: "Adds additional ratings",
            uk: "–î–æ–¥–∞—î –¥–æ–¥–∞—Ç–∫–æ–≤—ñ —Ä–µ–π—Ç–∏–Ω–≥–∏"
        }
    };

    // üî† –î–æ–¥–∞—î –ª–æ–∫–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ —Ç–µ–∫—Å—Ç–∏ —É Lampa
    function addLocalization() {
        Lampa.Lang.add({
            enhanced_ratings_desc: LANG.ratings_desc
        });
    }

    /**
     * üß± –°—Ç–≤–æ—Ä—é—î HTML-–µ–ª–µ–º–µ–Ω—Ç –æ–¥–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥—É –∑ —ñ–∫–æ–Ω–∫–æ—é
     * @param {string} source - –¥–∂–µ—Ä–µ–ª–æ —Ä–µ–π—Ç–∏–Ω–≥—É (imdb, tmdb, tomatoes —Ç–æ—â–æ)
     * @param {number} value - —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ä–µ–π—Ç–∏–Ω–≥—É
     */
    function createRatingElement(source, value) {
        if (!value || value <= 0) return '';

        var icon = CONFIG.ICONS[source] || CONFIG.ICONS.tmdb;
        var isPercent = ['tomatoes', 'popcorn', 'metacritic'].includes(source);

        // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∏—Å–ª–∞ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ç–∏–ø—É —Ä–µ–π—Ç–∏–Ω–≥—É
        var displayValue;
        if (source === 'tmdb') {
            // TMDB —Ä–µ–π—Ç–∏–Ω–≥ –≤—ñ–¥ 0‚Äì100 ‚Üí –∫–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ —É —à–∫–∞–ª—É 0‚Äì10
            displayValue = (value / 10).toFixed(1);
        } else if (isPercent) {
            displayValue = Math.round(value) + '%';
        } else {
            displayValue = parseFloat(value).toFixed(1);
        }

        // –Ø–∫—â–æ —Ç–æ–º–∞—Ç—ñ–≤ <50 ‚Äî –º—ñ–Ω—è—î–º–æ —ñ–∫–æ–Ω–∫—É –Ω–∞ "–ø–æ–≥–∞–Ω—É"
        var finalSource = (source === 'tomatoes' && value < 50) ? 'tomatoes_bad' : source;
        var finalIcon = CONFIG.ICONS[finalSource] || icon;

        // –ü–æ–≤–µ—Ä—Ç–∞—î –≥–æ—Ç–æ–≤–∏–π HTML —Ñ—Ä–∞–≥–º–µ–Ω—Ç
        return `
            <div class="full-start__rate rate--${finalSource}"
                 style="background:${finalIcon.bg};color:${finalIcon.text}">
                <img src="${CONFIG.ICON_BASE_URL + finalIcon.file}"
                     alt="${finalSource.toUpperCase()}" height="16"
                     onerror="this.style.display='none'">
                <span style="font-weight:bold;">${displayValue}</span>
            </div>`;
    }

    /**
     * üîé –ó–±–∏—Ä–∞—î –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ —Ä–µ–π—Ç–∏–Ω–≥–∏ –¥–ª—è —Ñ—ñ–ª—å–º—É/—Å–µ—Ä—ñ–∞–ª—É
     * –ø–æ—î–¥–Ω—É—î —Ç—ñ, —â–æ –ø—Ä–∏–π—à–ª–∏ –∑ API —ñ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∑ cardData
     */
    function getAllRatings(cardData, apiRatings) {
        var ratings = [];
        var apiSources = {};

        // 1Ô∏è‚É£ –†–µ–π—Ç–∏–Ω–≥–∏ –∑ API (MDBList)
        if (apiRatings && apiRatings.length) {
            for (var i = 0; i < apiRatings.length; i++) {
                var rating = apiRatings[i];
                if (rating.value > 0) {
                    if (rating.source === 'tmdb' && cardData.source === 'cub') continue;
                    ratings.push({ source: rating.source, value: rating.value });
                    apiSources[rating.source] = true;
                }
            }
        }

        // 2Ô∏è‚É£ –†–µ–π—Ç–∏–Ω–≥–∏, —â–æ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤ —Å–∞–º—ñ–π –∫–∞—Ä—Ç—Ü—ñ Lampa
        var sourcesToAdd = [
            { source: 'imdb', value: cardData.movie && cardData.movie.imdb_rating },
            { source: 'tmdb', value: cardData.movie && cardData.movie.vote_average },
            { source: 'tomatoes', value: cardData.movie && cardData.movie.rt_rating },
            { source: 'popcorn', value: cardData.movie && cardData.movie.popcorn_rating },
            { source: 'metacritic', value: cardData.movie && cardData.movie.metacritic_rating }
        ];

        // 3Ô∏è‚É£ –î–æ–¥–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ —Ç—ñ, —â–æ —â–µ –Ω–µ –±—É–ª–∏ –≤ API
        for (var j = 0; j < sourcesToAdd.length; j++) {
            var item = sourcesToAdd[j];
            if (item.value > 0 && !apiSources[item.source]) {
                var finalValue = item.value;
                if (item.source === 'tmdb' && item.value > 10) {
                    finalValue = item.value / 10;
                }
                ratings.push({ source: item.source, value: finalValue });
            }
        }

        // 4Ô∏è‚É£ –í–∏–¥–∞–ª—è—î–º–æ –¥—É–±–ª—ñ–∫–∞—Ç–∏ –¥–∂–µ—Ä–µ–ª
        var uniqueRatings = [];
        var seenSources = {};
        for (var k = 0; k < ratings.length; k++) {
            var rating = ratings[k];
            if (!seenSources[rating.source]) {
                uniqueRatings.push(rating);
                seenSources[rating.source] = true;
            }
        }

        // 5Ô∏è‚É£ –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞ —ñ —Å–æ—Ä—Ç—É—î–º–æ
        var allowedSources = ['imdb', 'tomatoes', 'popcorn', 'metacritic', 'tmdb'];
        var filteredRatings = uniqueRatings.filter(r => allowedSources.includes(r.source));

        return filteredRatings.sort(function(a, b) {
            var indexA = CONFIG.RATING_ORDER.indexOf(a.source);
            var indexB = CONFIG.RATING_ORDER.indexOf(b.source);
            return indexA - indexB;
        });
    }

    /**
     * üé¨ –í—ñ–¥–æ–±—Ä–∞–∂–∞—î –≤—Å—ñ –∑—ñ–±—Ä–∞–Ω—ñ —Ä–µ–π—Ç–∏–Ω–≥–∏ –≤ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ Lampa
     */
    function displayRatings(cardData, ratings) {
        var rateLine = $(".full-start-new__rate-line");
        if (!rateLine.length) {
            console.log('Rating line not found, skipping ratings display');
            return;
        }

        var pgElement = $(".full-start__pg");
        var statusElement = $(".full-start__status");

        // –û—á–∏—â–µ–Ω–Ω—è —Ç–∞ –±–∞–∑–æ–≤–µ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        rateLine.empty().css({
            display: 'flex',
            flexWrap: 'wrap',
            gap: '8px',
            alignItems: 'center'
        });

        var allRatings = getAllRatings(cardData, ratings);

        // –î–æ–¥–∞—î–º–æ –∫–æ–∂–µ–Ω —Ä–µ–π—Ç–∏–Ω–≥ —É DOM
        for (var i = 0; i < allRatings.length; i++) {
            var rating = allRatings[i];
            var ratingElement = createRatingElement(rating.source, rating.value);
            if (ratingElement) rateLine.append(ratingElement);
        }

        // –î–æ–¥–∞—î–º–æ —Ä–µ—à—Ç—É –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ Lampa (–≤—ñ–∫, —Å—Ç–∞—Ç—É—Å —Ç–æ—â–æ)
        if (pgElement.length) rateLine.append(pgElement);
        if (statusElement.length) rateLine.append(statusElement);

        // –Ø–∫—â–æ —Ä–µ–π—Ç–∏–Ω–≥—ñ–≤ –Ω–µ–º–∞—î
        if (rateLine.children().length === 0) {
            rateLine.html('<div style="color:#999;font-size:14px;">–†–µ–π—Ç–∏–Ω–≥–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ</div>');
        }
    }

    /**
     * üåç –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î —Ä–µ–π—Ç–∏–Ω–≥–∏ –∑ API MDBList
     */
    function loadRatings(cardData) {
        var type = cardData.method === 'tv' ? 'show' : cardData.method;
        var url = 'https://api.mdblist.com/tmdb/' + type + '/' + cardData.id + '?apikey=' + CONFIG.API_KEY;

        $.ajax({
            url: url,
            method: "GET",
            timeout: 5000
        })
        .done(function(response) {
            displayRatings(cardData, response.ratings || []);
        })
        .fail(function() {
            console.warn('MDBList API unavailable, using fallback ratings');
            displayRatings(cardData, []);
        });
    }

    /**
     * üß© –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –ø–ª–∞–≥—ñ–Ω–∞ –¥–æ Lampa
     */
    function main() {
        // –°–ª—É—Ö–∞—î –ø–æ–¥—ñ—é "full complite" ‚Äî –∫–æ–ª–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —Ñ—ñ–ª—å–º—É –ø–æ–≤–Ω—ñ—Å—Ç—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞
        Lampa.Listener.follow('full', function(e) {
            if (e.type === 'complite') {
                loadRatings(e.object);
            }
        });
    }

    /**
     * üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø–ª–∞–≥—ñ–Ω–∞ (–æ–¥–∏–Ω —Ä–∞–∑)
     */
    function initPlugin() {
        addLocalization();
        main();

        // –î–æ–¥–∞—î–º–æ CSS —Å—Ç–∏–ª—ñ –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–æ–≤–∏—Ö –±–ª–æ–∫—ñ–≤
        $('<style>').text(`
            .full-start__rate {
                display:inline-flex;
                align-items:center;
                gap:6px;
                padding:7px 7px;
                border-radius:9px;
                font-size:15px;
                font-weight:bold;
                text-shadow:0 1px 2px rgba(0,0,0,0.1);
                z-index:10;
                position:relative;
            }
            .full-start__rate img {
                height:20px;
                width:auto;
            }
        `).appendTo('head');
    }

    /**
     * üõ† –ì–ª–æ–±–∞–ª—å–Ω–∏–π –±–ª–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
     * –ó–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –æ–¥–∏–Ω —Ä–∞–∑, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –¥—É–±–ª—é–≤–∞–Ω–Ω—è –ø–ª–∞–≥—ñ–Ω–∞
     */
    if (!window.plugin_enhanced_ratings) {
        window.plugin_enhanced_ratings = true;
        console.log('‚úÖ Enhanced Ratings plugin initialized');

        var manifest = {
            type: "other",
            version: "0.0.9",
            author: 'ko31k',
            name: "Enhanced Ratings",
            description: "Adds ratings with SVG icons from multiple sources"
        };

        // –Ø–∫—â–æ Lampa –≤–∂–µ –≥–æ—Ç–æ–≤–∞
        if (window.appready) {
            initPlugin();
        } else {
            // –Ü–Ω–∞–∫—à–µ —á–µ–∫–∞—î–º–æ –ø–æ–¥—ñ—é –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ
            Lampa.Listener.follow('app', function(e) {
                if (e.type === 'ready') initPlugin();
            });
        }
    }
})();
